#compdef androidx

_commands=(
    '-h:show androidx command line help.'
    '--help:show androidx command line help.'
    '-V:show androidx version.'
    '--version:show androidx version.'
    'build:build project to generate the apk.'
    'repack:repack a apk.'
    'show:show version of a apk file or keystore infomation.'
    'upgrade-self:upgrade this software.'
    'integrate:integrate zsh completions.'
)

function _androidx_commands() {
    _describe 'command' _commands
}

function _androidx() {
    local context state state_descr line
    typeset -A opt_args

    _arguments \
        '1: :_androidx_commands' \
        '*:: :->option'
    
    case $state in
        option)
            case $words[1] in
                 build)
                    _arguments \
                        '--project-dir=[set the project dir]:project-dir:{_files -/}' \
                        '--output-dir=[set the output dir]:output-dir:{_files -/}' \
                        '--build-type=[set the build type]:build-type:(debug release)' \
                        '--webp[convert images to webp]' \
                        '--resguard[guard the res]' \
                        '--redex[rebuild dex to optimize]' \
                        '--jiagu[jiagu with 360jiagubao]' \
                        '--channels=[generate the multi channel packages]:channels:(false true zip)' \
                        '--channels-config-file=[set the channels config file]:channels-config-file:_files' \
                        '--resguard-config-file=[set the resguard config file]:resguard-config-file:_files -g "*.xml"' \
                        '--keystore-file=[set the keystore file]:keystoreFile:_files' \
                        '--keystore-password=[set the password of the keystore file]: :()' \
                        '--keystore-key-alias=[set the key alias]: :()' \
                        '--keystore-key-password=[set the password of the key alias]: :()' \
                        '--install[install the final apk on connected device]' \
                        '(--verbose -v)'{--verbose,-v}'[verbose output log]' \
                        '(--xtrace -x)'{--xtrace,-x}'[trace execution of commands]'
                    ;;
                repack)
                    _arguments \
                        '--input-file=[set the input apk file]:input-apk-file:{_files -g "*.apk"}' \
                        '--output-dir=[set the output dir]:output-dir:_files -/' \
                        '--build-type=[set the build type]:build-type:(debug release)' \
                        '--webp[convert images to webp]' \
                        '--resguard[guard the res]' \
                        '--redex[rebuild dex to optimize]' \
                        '--jiagu[jiagu with 360jiagubao]' \
                        '--channels=[generate the multi channel packages]:channels:(false true zip)' \
                        '--channels-config-file=[set the channels config file]:channels-config-file:_files' \
                        '--resguard-config-file=[set the resguard config file]:resguard-config-file:_files -g "*.xml"' \
                        '--keystore-file=[set the keystore file]:keystoreFile:_files' \
                        '--keystore-password=[set the password of the keystore file]: :()' \
                        '--keystore-key-alias=[set the key alias]: :()' \
                        '--keystore-key-password=[set the password of the key alias]: :()' \
                        '--install[install the final apk on connected device]' \
                        '(--verbose -v)'{--verbose,-v}'[verbose output log]' \
                        '(--xtrace -x)'{--xtrace,-x}'[trace execution of commands]'
                    ;;
                show)
                    _arguments \
                        ':show:(keystore version)' \
                        '*:: :->show_option'
                    case $words[1] in
                        keystore)
                            _arguments '1:project-dir:{_files -/}' ;;
                        version)
                            _arguments '1:input-apk-file:{_files -g "*.apk"}' ;;
                    esac
                    ;;
                integrate)
                    _arguments ':what:(zsh)'
                    ;;
            esac
            ;;
    esac
}

_androidx "$@"
